name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04, macos-latest, windows-latest ]
        build_type: [ Release ]
        include:
          - os: windows-latest
            generator: "Visual Studio 17 2022"
          - os: ubuntu-22.04
            generator: "Unix Makefiles"
          - os: macos-latest
            generator: "Unix Makefiles"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Install Qt for all platforms
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.0'
          host: ${{ matrix.os == 'windows-latest' && 'windows' || matrix.os == 'macos-latest' && 'mac' || 'linux' }}
          target: 'desktop'
          arch: ${{ matrix.os == 'windows-latest' && 'win64_msvc2019_64' || matrix.os == 'macos-latest' && 'clang_64' || 'gcc_64' }}
          modules: 'qtserialport'
          setup-python: true

      # Install additional Linux dependencies if needed
      - name: Install additional Linux dependencies
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-dev libxkbcommon-x11-0

      # macOS code signing setup
      - name: Import Code-Signing Certificates
        if: matrix.os == 'macos-latest'
        uses: Apple-Actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.APPLE_CERTIFICATE_BASE64 }}
          p12-password: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          keychain-password: ${{ github.run_id }}

      # Debug Qt installation
      - name: Debug Qt installation
        run: |
          echo "Qt6_DIR: $Qt6_DIR"
          echo "QTDIR: $QTDIR"
          echo "PATH: $PATH"
          ls -la $QTDIR || echo "QTDIR not found"

      - name: Configure CMake
        run: >
          cmake -B ${{github.workspace}}/build 
          -G "${{matrix.generator}}" 
          -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
          -DCMAKE_PREFIX_PATH=${{env.Qt6_DIR}}
          ${{ matrix.os == 'macos-latest' && '-DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"' || '' }}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

      # macOS code signing
      - name: Sign the macOS application
        if: matrix.os == 'macos-latest'
        env:
          TEAM_ID: ${{ secrets.APPLE_SIGNING_ID }}
        run: |
          /usr/bin/codesign --force --options runtime --sign "Developer ID Application: $TEAM_ID" --verbose "${{github.workspace}}/build/owon1041.app"

      # macOS notarization (optional but recommended)
      - name: Notarize the macOS application
        if: matrix.os == 'macos-latest'
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          # Create a ZIP archive of the app
          ditto -c -k --keepParent "${{github.workspace}}/build/owon1041.app" "${{github.workspace}}/build/owon1041.zip"
          
          # Notarize the app
          xcrun notarytool submit "${{github.workspace}}/build/owon1041.zip" \
            --apple-id "$APPLE_ID" \
            --password "$APPLE_ID_PASSWORD" \
            --team-id "$TEAM_ID" \
            --wait
          
          # Staple the notarization ticket
          xcrun stapler staple "${{github.workspace}}/build/owon1041.app"

      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: ${{github.workspace}}/build/Release/owon1041.exe
          if-no-files-found: error

      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: ${{github.workspace}}/build/owon1041.app
          if-no-files-found: error

      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-22.04'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: ${{github.workspace}}/build/owon1041
          if-no-files-found: error